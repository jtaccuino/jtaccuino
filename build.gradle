/*
 * Copyright 2024 JTaccuino Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.diffplug.spotless' version '7.0.3'
    id 'net.ltgt.errorprone' version '4.2.0' apply false
}

allprojects {

    repositories {
        mavenLocal()

        // Use Maven Central for resolving dependencies.
        mavenCentral()

        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots"
        }

        // JPRO artifacts
        maven {
            url = "https://sandec.jfrog.io/artifactory/repo"
        }
    }

    // configuring Spotless
    apply plugin: 'com.diffplug.spotless'

    afterEvaluate {
        spotless {
            if (!System.env.CI) {
                // https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
                // only format files which have changed since this ref
                // TODO: Figure out a way to get this working in CI (i.e. Github Workflows)
                ratchetFrom 'origin/main'
            }

            format 'textBasedFiles', {
                target(
                    '*.gradle',
                    '**/*.gradle',
                    '**/*.asciidoc',
                    '**/*.adoc',
                    '**/*.asc',
                    '**/*.css',
                    '**/*.json',
                    '**/*.md',
                    '**/*.properties',
                    '.gitignore',
                )
                targetExclude(
                    '.*/**',
                )

                trimTrailingWhitespace()
                leadingTabsToSpaces(4)
                endWithNewline()
                replaceRegex 'noMultipleEmptyLines', '\n{3,}', '\n\n'
            }

            def closure = {
                trimTrailingWhitespace()
                leadingTabsToSpaces(4)
                endWithNewline()

                replaceRegex 'noStarImports', /\nimport (static )?[a-zA-Z0-9.]*[.][\*];\n/, '\n'
                replaceRegex 'noMultipleEmptyLines', '\n{3,}', '\n\n'
                replaceRegex 'Remove @author javadoc taglets.', '\n\\s*\\*\\s*@author.*', ''
                replaceRegex 'Remove trailing empty comment lines.', '\n\\s*\\*(\n\\s*\\*/\n)', '$1'
                replaceRegex 'Remove empty javadoc', '\n\\s*/\\*\\*\n\\s*\\*/\n', '\n\n'
                replaceRegex 'Remove empty lines before end of block', '\\n[\\n]+(\\s*})(?=\\n)', '\n$1'
                licenseHeaderFile rootProject.file('LICENSE.spotlessJavaTemplate')
            }

            if (plugins.hasPlugin(GroovyPlugin)) {
                groovy(closure)
            } else if (plugins.hasPlugin(JavaPlugin)) {
                java(closure)
            }
        }

        tasks.named('check') {
            dependsOn spotlessCheck
        }
    }

    // now configuring for projects that contain code not just structuring the project
    if (childProjects.isEmpty()) {
        // configuring standard java project
        apply plugin: 'java-library'
        apply plugin: 'jacoco'

        java {
            withJavadocJar()
            withSourcesJar()
            // Apply a specific Java toolchain to ease working on different environments.
            toolchain {
                languageVersion.set(JavaLanguageVersion.of(24))
            }
        }

        tasks.named('test') {
            finalizedBy jacocoTestReport
        }

        // configuring Errorprone
        apply plugin: 'net.ltgt.errorprone'

        dependencies {
            errorprone 'com.google.errorprone:error_prone_core:2.38.0'
        }
    }
}
